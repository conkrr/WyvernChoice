swagger: '2.0'
info:
  description: "Wyvern Choice API"
  version: 1.1.0
  title: "Wyvern Choice API"
 # host: "24hdpfa774.execute-api.us-east-1.amazonaws.com"
schemes:
- "https"
paths:
  /admin:
    get:
      operationId: "getListofChoices"
      description: "Get a list of all choices within the current ID."
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/GetListOfChoicesResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
  /admin/{deleteDate}:
    post:
      operationId: "deleteChoices"
      description: "Delete all choices that are older than a given date."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "deleteDate"
        required: true
        type: "number"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/DeleteChoicesResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
  /choice/{choiceID}:
    get:
      operationId: "getSpecificChoice"
      description: "Get a specific choice using an ID."
      produces:
      - "application/json"
      parameters:
      - name: "choiceID"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/GetChoiceResponse"
        400:
          description: "400 response"
  /choice:
    post:
      operationId: "createChoice"
      description: "Creates a choice."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "CreateChoiceRequest"
        required: true
        schema:
          $ref: "#/definitions/CreateChoiceRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/CreateChoiceResponse"
        400:
          description: "400 response"
  /finalChoice:
    post:
      operationId: "finalizeChoice"
      description: "Allows for a user to mark an alternative as the final decision."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "alternativeID"
        required: true
        schema:
          $ref: "#/definitions/FinalChoiceRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/FinalChoiceResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
  /register:
    post:
      operationId: "registerUser"
      description: "User is registered, with their name and password being added to the database. If this is not their first time in, they use their established information to log in."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "RegisterUserRequest"
        required: true
        schema:
          $ref: "#/definitions/RegisterUserRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/RegisterUserResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400: 
          description: "400 response"
  /alternative/{alternativeID}:
    get:
      operationId: "getAlternative"
      description: "Get a specific alternative based on an ID."
      produces:
      - "application/json"
      parameters:
      - name: "alternativeID"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/GetAlternativeResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
  /addapproval:
    post:
      operationId: "addApproval"
      description: "Add an approval to the system."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ChangeApprovalRequest"
        required: true
        schema:
          $ref: "#/definitions/AddApprovalRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/AddApprovalResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
  /removeapproval:
    post:
      operationId: "removeApproval"
      description: "Remove an approval request a user sends."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ChangeApprovalRequest"
        required: true
        schema:
          $ref: "#/definitions/RemoveApprovalRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/RemoveApprovalResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      
  /adddisapproval:
    post:
      operationId: "addDisapproval"
      description: "Register a downvote request a user sends."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ChangeDisapprovalRequest"
        required: true
        schema:
          $ref: "#/definitions/AddDisapprovalRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/AddDisapprovalResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
  
  /removedisapproval:
    post:
      operationId: "removeDisapproval"
      description: "Remove a downvote request a user sends."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "ChangeDisapprovalRequest"
        required: true
        schema:
          $ref: "#/definitions/RemoveDisapprovalRequest"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/RemoveDisapprovalResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
  /feedback:
    post:
      operationId: "createFeedback"
      description: "Create a new piece of feedback that an individual desires to send."
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
              $ref: "#/definitions/CreateFeedbackResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        400:
          description: "400 response"
definitions:
  ListofChoices:
    type: array
    items:
      $ref: "#/definitions/Choice"
    
  Choice:
    type: "object"
    required:
    - "name"
    - "choiceID"
    - "numParticipants"
    - "completionDate"
    - "isFinalized"
    - listofAlternatives
    properties:
      name:
        type: "string"
      choiceID:
        type: "string"
      numParticipants:
        type: "integer"
      isFinalized:
        type: "boolean"
      completionDate:
        type: "string"
      listofAlternatives:
        type: "array"
        items: 
          $ref: "#/definitions/Alternative"
  Alternative:
    type: "object"
    required: 
    - "name"
    - "alternativeID"
    - "Approvals"
    - "Disapprovals"
    #- "isChosen"
    #- ListofFeedback
    properties:
      name:
        type: "string"
      alternativeID:
        type: "string"
      Approvals:
        $ref: "#/definitions/Approvals"
      Disapprovals:
        $ref: "#/definitions/Disapprovals"
      isChosen:
        type: "boolean"
      ListofFeedback:
        type: "array"
        items:
          $ref: "#/definitions/Feedback"
  Approvals:
    type: "object"
    required:
    - "approvalCount"
    - "alternativeID"
    - "approvalUsers"
    properties:
      approvalCount:
        type: "integer"
      alternativeID:
        type: "string"
      approvalUsers:
        type: "array"
        items:
          $ref: "#/definitions/User"
        
  Disapprovals:
    type: "object"
    required:
    - "disapprovalCount"
    - "alternativeID"
    - "disapprovalUsers"
    properties:
      disapprovalCount:
        type: "integer"
      alternativeID:
        type: "string"
      disapprovalUsers:
        type: "array"
        items:
          $ref: "#/definitions/User"
        
  User:
    type: "object"
    required:
    - "username"
    - "choiceID"
    - "feedbackInfo"
    properties:
      username:
        type: "string"
      choiceID:
        type: "string"
      feedbackInfo:
        type: "array"
        items:
          $ref: "#/definitions/Feedback"
      password:
        type: "string"
    
  Feedback:
    type: "object"
    required:
    - "user"
    - "text"
    - "timestamp"
    - "alternativeID"
    - "feedbackID"
    properties:
      user: 
        type: "string"
      text: 
        type: "string"
      timestamp: 
        type: "number"
      alternativeID:
        type: "string"
      feedbackID:
        type: "integer"
  FinalChoiceRequest:
    type: "object"
    required:
    - "choiceID"
    - "alternativeID"
    - "isFinalized"
    properties:
      choiceID:
        type: "string"
      alternativeID:
        type: "string"
      isFinalized:
        type: "boolean"
  FinalChoiceResponse:
    type: "object"
    required:
    - "choiceID"
    - "alternativeID"
    - "isFinalized"
    - "statusCode"
    - "error"
    properties:
      choiceID:
        type: "string"
      alternativeID:
        type: "string"
      isFinalized:
        type: "boolean"
      statusCode:
        type: "integer"
      error:
        type: "string"

  CreateChoiceRequest:
    type: "object"
    required:
    - "name"
    - "creatingUserID"
    - "numParticipants"
    - "listofAlternatives"
    properties:
      name:
        type: "string"
      creatingUserId:
        type: "string"
      numParticipants:
        type: "integer"
      listofAlternatives:
        type: "array"
        items:
          type: "string"

  CreateChoiceResponse:
    type: "object"
    required:
    - "choice"
    - "statusCode"
    - "error"
    properties:
      choice:
        $ref: "#/definitions/Choice"
      statusCode:
        type: "integer"
      error:
        type: "string"

  RegisterUserRequest:
    type: "object"
    required: 
    - "username"
    - "choiceID"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      choiceID:
        type: "string"
        
        
  RegisterUserResponse:
    type: "object"
    required:
    - "username"
    - "statusCode"
    - "error"
    properties:
      username:
        type: "string"
      statusCode:
        type: "integer"
      error:
        type: "string"

  AddApprovalRequest:
    type: "object"
    required: 
    - "approvingUser"
    - "alternativeID"
    - "choiceID"
    properties:
      approvingUser:
        type: "string"
      alternativeID:
        type: "string"
      choiceID:
        type: "string"
  
  AddApprovalResponse:
    type: "object"
    required:
    - "approvingUser"
    - "alternativeID"
    - "choiceID"
    - "statusCode"
    - "error"
    properties:
      approvingUser:
        type: "string"
      alternativeID:
        type: "string"
      choiceID:
        type: "string"
      statusCode:
        type: "integer"
      error:
        type: "string"
      
  RemoveApprovalRequest:
    type: "object"
    required: 
    - "approvingUser"
    - "alternativeID"
    - "choiceID"
    properties:
      approvingUser:
        type: "string"
      alternativeID:
        type: "string"
      choiceID:
        type: "string"
  RemoveApprovalResponse:
    type: "object"
    required:
    - "approvingUser"
    - "alternativeID"
    - "choiceID"
    - "statusCode"
    - "error"
    properties:
      approvingUser:
        type: "string"
      alternativeID:
        type: "string"
      choiceID:
        type: "string"
      statusCode:
        type: "integer"
      error:
        type: "string"
  AddDisapprovalRequest:
    type: "object"
    required: 
    - "disapprovingUser"
    - "alternativeID"
    - "choiceID"
    properties:
      userList:
        type: "string"
      alternativeID:
        type: "string"
      choiceID:
        type: "string"
  AddDisapprovalResponse:
    type: "object"
    required:
    - "disapprovingUser"
    - "alternativeID"
    - "choiceID"
    - "statusCode"
    - "error"
    properties:
      disapprovingUser:
        type: "string"
      alternativeID:
        type: "string"
      choiceID:
        type: "string"
      statusCode:
        type: "integer"
      error:
        type: "string"
  RemoveDisapprovalRequest:
    type: "object"
    required: 
    - "disapprovingUser"
    - "alternativeID"
    - "choiceID"
    properties:
      userList:
        type: "string"
      alternativeID:
        type: "string"
      choiceID:
        type: "string"
  RemoveDisapprovalResponse:
    type: "object"
    required:
    - "disapprovingUser"
    - "alternativeID"
    - "choiceID"
    - "statusCode"
    - "error"
    properties:
      disapprovingUser:
        type: "string"
      alternativeID:
        type: "string"
      choiceID:
        type: "string"
      statusCode:
        type: "integer"
      error:
        type: "string"

  GetChoiceResponse:
    type: "object"
    required:
    - "choice"
    - "statusCode"
    - "error"
    properties:
      choice:
        $ref: "#/definitions/Choice"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  DeleteChoicesResponse:
    type: "object"
    required:
    - "deleteTime"
    - "statusCode"
    - "error"
    properties:
      deleteTime:
        type: "number"
      statusCode:
        type: "integer"
      error:
        type: "string"
         
  GetAlternativeResponse:
    type: "object"
    required:
    - "alternativeID"
    - "statusCode"
    - "error"
    properties:
      alternativeID:
        type: "string"
      statusCode:
        type: "integer"
      error:
        type: "string"
        
  GetListOfChoicesResponse:
    type: "object"
    required:
    - ListOfChoices
    - "statusCode"
    - "error"
    properties:
      ListOfChoices:
        type: "array"
        items:
          $ref: "#/definitions/Choice"
      statusCode:
        type: "integer"
      error:
        type: "string"
  CreateFeedbackResponse:
    type: "object"
    required:
    - "feedback"
    - "statusCode"
    - "error"
    properties:
      feedback:
        $ref: "#/definitions/Feedback"
      statusCode:
        type: "integer"
      error:
        type: "string"


  
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /justgaret23/cs3733wyvern/1.1.0

















